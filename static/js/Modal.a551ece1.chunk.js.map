{"version":3,"sources":["components/shared/Modal.js"],"names":["Modal","props","backdropRef","createRef","handleBackdropClick","e","current","target","onHandleModal","handleKeyPress","code","data","state","title","name","body","photo","button","window","addEventListener","this","removeEventListener","language","className","ref","onClick","type","Component"],"mappings":"kMAGqBA,E,kDAGnB,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAHRC,YAAcC,sBAEK,EAoBnBC,oBAAsB,SAAAC,GAAM,IAClBC,EAAY,EAAKJ,YAAjBI,QACJA,GAAWD,EAAEE,SAAWD,IAI5BE,EAD0B,EAAKP,MAAvBO,kBAzBS,EA6BnBC,eAAiB,SAAAJ,GACA,WAAXA,EAAEK,OAENF,EAD0B,EAAKP,MAAvBO,kBA/BS,IAGTG,EAASV,EAATU,KAHS,OAKjB,EAAKC,MAAQ,CACXC,MAAOF,EAAKG,KACZC,KAAMJ,EAAKK,MAAMF,KACjBG,OAAQ,MARO,E,gEAajBC,OAAOC,iBAAiB,UAAWC,KAAKX,kB,6CAIxCS,OAAOG,oBAAoB,UAAWD,KAAKX,kB,+BAkBnC,IAAD,EAC6BW,KAAKnB,MAAjCO,EADD,EACCA,cAAec,EADhB,EACgBA,SADhB,EAEyBF,KAAKR,MAA7BC,EAFD,EAECA,MAAOE,EAFR,EAEQA,KAAME,EAFd,EAEcA,OACrB,OACE,yBACEM,UAAU,2BACVC,IAAKJ,KAAKlB,YACVuB,QAASL,KAAKhB,qBAEd,yBAAKmB,UAAU,SACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,gBAAgBV,GAC9B,yBAAKU,UAAU,WACf,4BACEG,KAAK,SACLH,UAAU,kBACVE,QAAS,kBAAMjB,MAHjB,MAQF,yBAAKe,UAAU,gBACb,uBAAGA,UAAU,eACG,OAAbD,EACG,8BACA,gJACHP,IAGL,yBAAKQ,UAAU,gBACb,4BACEG,KAAK,SACLH,UAAU,uBACVE,QAAS,kBAAMjB,MAEdS,U,GAzEoBU","file":"static/js/Modal.a551ece1.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  backdropRef = createRef();\n\n  constructor(props) {\n    super(props);\n\n    const { data } = props;\n\n    this.state = {\n      title: data.name,\n      body: data.photo.name,\n      button: 'Ok',\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n    if (current && e.target !== current) {\n      return;\n    }\n    const { onHandleModal } = this.props;\n    onHandleModal();\n  };\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    const { onHandleModal } = this.props;\n    onHandleModal();\n  };\n\n  render() {\n    const { onHandleModal, language } = this.props;\n    const { title, body, button } = this.state;\n    return (\n      <div\n        className=\"backdrop backdrop__modal\"\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n      >\n        <div className=\"modal\">\n          <div className=\"modal__inner\">\n            <h2 className=\"modal__title\">{title}</h2>\n            <div className=\"spacer\" />\n            <button\n              type=\"button\"\n              className=\"button modal__x\"\n              onClick={() => onHandleModal()}\n            >\n              x\n            </button>\n          </div>\n          <div className=\"modal__inner\">\n            <p className=\"modal__body\">\n              {language === 'en'\n                ? 'Your message has been sent '\n                : 'Ваше сообщение отправлено '}\n              {body}\n            </p>\n          </div>\n          <div className=\"modal__inner\">\n            <button\n              type=\"button\"\n              className=\"button modal__button\"\n              onClick={() => onHandleModal()}\n            >\n              {button}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onHandleModal: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    button: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"],"sourceRoot":""}